!function(){"use strict";var e=angular.module("tChat",["ui.bootstrap","angular-link-focus","rt.eventemitter"]);e.constant("VISIBLE_THREAD_COUNT",3),e.run(["ThreadService",function(e){var t,a;t=[{uid:4,name:"Tom"},{uid:50,name:"Dick"},{uid:75,name:"Harry"}],a=[{gid:7,name:"Classroom"}],e.openThread("direct",[t[0]],!1),e.openThread("multi",[t[1],t[2]],!1),e.openThread("group",[a[0]],!1)}])}(),angular.module("tChat").directive("tChatThreads",["ThreadService","VISIBLE_THREAD_COUNT",function(e,t){"use strict";function a(a){a.threads=e.getOpenedThreads,a.visibleThreadCount=t}return{restrict:"A",replace:!0,scope:{},templateUrl:"/src/partials/t-chat-threads.html",link:a}}]),angular.module("tChat").directive("tChatMessages",[function(){"use strict";function e(e,t){if(!e.messages)throw new Error("Cannot find messages in scope to render.");t.slimScroll({height:"auto",allowPageScroll:!1,start:"bottom",alwaysVisible:!1,position:"right"}),e.$watchCollection("messages",function(e){angular.isUndefined(e)||t.slimScroll().slimScroll({scrollTo:t.prop("scrollHeight")})})}return{restrict:"E",replace:!0,templateUrl:"/src/partials/t-chat-messages.html",link:e}}]),angular.module("tChat").directive("tChatThread",[function(){"use strict";return{restrict:"A",replace:!0,scope:{thread:"="},templateUrl:"/src/partials/t-chat-thread.html",controller:"ThreadController"}}]),angular.module("tChat").directive("tChatWidget",function(){"use strict";return{restrict:"A",replace:!0,scope:{title:"@"},templateUrl:"/src/partials/t-chat-widget.html"}}),angular.module("tChat").controller("ThreadController",["$scope","$log","ThreadService",function(e,t,a){"use strict";function n(t){a.sendMessage(e.thread.tid,{text:t,timestamp:(new Date).getTime()})}function r(t){e.ui.active=t&&t.tid===e.thread.tid}function i(t){e.messages.push(t)}e.messages=[],e.ui={minimized:0,highlighted:0,users:[],chat:null},e.activeThread=a.getActiveThread,e.focus=function(){e.ui.active||(t.log("activating thread "+e.thread.tid),e.ui.active=!0,a.setActiveThread(e.thread))},e.blur=function(){e.ui.active=!1},e.close=function(){t.log("close thread "+e.thread.tid),a.closeThread(e.thread.tid)},e.mute=function(){},e.addUsers=function(e){e=e||[]},e.getMessages=function(e,t){t=t||25},e.removeUser=function(){},e.onKeyup=function(t){13===t.keyCode&&e.ui.chat&&(n(e.ui.chat),e.ui.chat=null)},a.on("resetActiveThread",r),a.on("thread."+e.thread.tid+".message",i),e.$on("$destroy",function(){a.off("activeThread",r),a.off("thread."+e.thread.tid+".message")})}]),angular.module("tChat").controller("UserListController",["$scope","ThreadService",function(e,t){"use strict";e.data={search:""},e.users=[{uid:1,name:"Administrator"},{uid:2,name:"Alan Turing"}],e.haveOpenThread=t.doesUserHaveThread,e.chat=function(a){var n=e.haveOpenThread(a);n?t.hoistThread(n):t.openThread("direct",[a])}}]),angular.module("tChat").controller("GroupListController",["$scope","ThreadService",function(e,t){"use strict";e.data={search:""},e.groups=[{gid:1,name:"Physics Class"},{gid:2,name:"English Class"}],e.haveOpenThread=t.doesGroupHaveThread,e.chat=function(a){var n=e.haveOpenThread(a);n?t.hoistThread(n):t.openThread("group",[a])}}]),angular.module("tChat").controller("ThreadArchiveController",["$scope",function(e){"use strict";e.threads=[{tid:1,title:"Physics Class",lastMessage:"Bye guys"},{tid:2,title:"Ravi, Barack",lastMessage:"See you. Lets catch up sometime."}]}]),angular.module("tChat").filter("reverse",function(){"use strict";return function(e){return e.slice().reverse()}}),angular.module("tChat").factory("ThreadService",["$log","$timeout","VISIBLE_THREAD_COUNT","eventEmitter",function(e,t,a,n){"use strict";function r(e,t){t.mid=i();var a=angular.copy(t);a.tid=e,M.push(a),S.emit("thread."+e+".message",t)}function i(){return"message."+ ++O}function s(){return"thread."+ ++$}function o(e){var t;return _.every(z,function(a){return a.tid===e?(t=a,!1):!0}),t}function l(){return z}function d(e){U=e,S.emit("resetActiveThread",U)}function c(e){return e.name}function u(t){return 1===t.length?c(t[0]):2===t.length?_.str.sprintf("%s & %s",t[0].name,t[1].name):t.length>2?_.str.sprintf("%s, %s & %d others",t[0].name,t[1].name,t.length-1):(e.warn("multi-user thread has "+t.length+" users."),"")}function h(e){return e.name}function p(e,t){var a={tid:s(),title:g(e,t),type:e,_state:"open"};switch(e){case"direct":a.users=t,b(a.users,a.tid);break;case"group":a.group=t[0],y(a.group,a.tid);break;case"multi":a.users=t;break;default:throw new Error("thread has unknown type: "+e)}return a}function g(e,t){if(!t.length)throw new Error("need at least one entity.");switch(e){case"direct":return c(t[0]);case"group":return h(t[0]);case"multi":return u(t);default:throw new Error("thread has unknown type: "+e)}}function f(e){if(angular.isUndefined(e))throw new Error;return v(e,"group","gid")}function m(e){return v(e,"user","uid")}function v(e,t,a){if(a=a||"id",-1===["user","group"].indexOf(t))throw new Error("unknown entity: "+t);var n;switch(t){case"user":n=H;break;case"group":n=L}return n[e[a]]?n[e[a]]:!1}function b(e,t){_.each(e,function(e){m(e)||(H[e.uid]=t)})}function T(e){_.each(e,function(e){H[e.uid]&&delete H[e.uid]})}function y(e,t){f(e)||(L[e.gid]=t)}function C(e){L[e.gid]&&delete L[e.gid]}function w(e,a,n){angular.isUndefined(n)&&(n=!0);var r=p(e,a);z.push(r),n&&t(function(){d(r)})}function k(t){var a=o(t);a.users&&T(a.users),a.group&&C(a.group),z=_.filter(z,function(e){return e.tid!==t}),e.log(z.length+" threads remain")}function x(n){for(var r=!1,i=0;i<z.length;i++)if(n===z[i].tid){r=i;break}if(!_.isBoolean(r)){var s=z.length-1,o=s-a+1,l=z[r];r>=o&&s>=r?(e.log("not hoisting, activating thread "+l.tid),d(l)):(z.splice(r,1),z.push(l),t(function(){d(l)}))}}function A(e,t){r(e,t)}function E(){}var S,U,$=0,O=0,z=[],H={},L={},M=[];return Object.observe&&Object.observe(z,function(){e.log("there are "+z.length+" open threads")}),E.prototype.openThread=w,E.prototype.closeThread=k,E.prototype.hoistThread=x,E.prototype.setActiveThread=d,E.prototype.getOpenedThreads=l,E.prototype.doesUserHaveThread=m,E.prototype.doesGroupHaveThread=f,E.prototype.sendMessage=A,S=new E,n.inject(E),S}]),angular.module("tChat").run(["$templateCache",function(e){e.put("/src/partials/t-chat-messages.html",'<ul class="list-messages list-unstyled">\n    <li class="list-item-message" data-mid="{{ message.mid }}" ng-repeat="message in messages">\n        {{ message.text }} \n        <span class="text-muted">{{ message.timestamp | date:\'short\' }}</span>\n    </li>\n</ul>'),e.put("/src/partials/t-chat-thread.html",'<div class="col-xs-4 panel-thread-container" data-ng-class="{\n    \'panel-container-minimized\': ui.minimized == 1\n  }">\n  <div class="panel panel-thread panel-thread-{{ thread.type }} panel-default" data-ng-class="{\n      \'panel-success\': ui.highlighted,\n    }" data-tid="{{ thread.tid }}">\n    <div class="panel-heading">\n      <div class="panel-heading-buttons pull-right">\n        <div class="btn-group" data-dropdown>\n          <button type="button" class="btn btn-xs btn-default btn-actions dropdown-toggle" id="t-chat-thread-settings-{{ thread.tid }}" \n          data-toggle="dropdown">\n            <i class="fa fa-cog"></i>\n          </button>\n          <ul class="dropdown-menu" role="menu" aria-labelledby="t-chat-thread-settings-{{ thread.tid }}">\n            <li role="presentation">\n              <a role="menuitem" tabindex="-1" href="#">\n                <i class="fa fa-fw fa-user"></i> Add more people\n              </a>\n            </li>\n            <li role="presentation" data-ng-if="thread.type === \'multi\'">\n              <a role="menuitem" tabindex="-1" href="#">\n                <i class="fa fa-fw fa-power-off"></i> Leave\n              </a>\n            </li>\n          </ul>\n<!--      <button type="button" class="btn btn-xs btn-default btn-resize" \n            data-ng-click="ui.minimized = !ui.minimized">\n            <i class="fa" data-ng-class="{ \n              \'fa-minus\': ui.minimized == 0,\n              \'fa-plus\': ui.minimized == 1 }">\n            </i>\n          </button> -->\n          <button type="button" class="btn btn-xs btn-default btn-close" data-ng-click="close()">\n            <i class="fa fa-remove"></i>\n          </button>\n        </div>\n      </div>  \n      <div class="panel-title" data-ng-if="thread.title" ng-click="ui.minimized = !ui.minimized">\n        <i class="fa fa-circle t-chat-color-green"></i>&nbsp;&nbsp;{{ thread.title }}\n      </div>\n    </div>\n    <div class="panel-content" data-ng-show="!ui.minimized">\n      <div class="panel-body">\n        <t-chat-messages data-thread="thread" data-messages="messages"></t-chat-messages>\n      </div>\n      <div class="panel-footer">\n        <input type="text" class="form-control" name="chat" placeholder="Send a message." ng-model="ui.chat" link-focus="ui.active" ng-focus="focus()" ng-blur="blur()" ng-keyup="onKeyup($event)" tabindex="{{ $parent.visibleThreadCount - $parent.$index }}">\n      </div>\n    </div>\n  </div>\n</div>'),e.put("/src/partials/t-chat-threads.html",'<div class="col-xs-8">\n  <div class="container-threads row">\n    <div data-t-chat-thread\n         data-ng-repeat="t in threads() | reverse | limitTo:visibleThreadCount | reverse track by t.tid "\n         data-thread="t"\n         data-tid="{{ t.tid }}">\n    </div>\n  </div>\n</div>'),e.put("/src/partials/t-chat-widget.html",'<div class="col-xs-4 panel-chat-widget-container">\n  <div class="panel panel-default panel-chat-widget">\n    <div class="panel-heading">\n      <div class="panel-title">\n        Teamie Chat <i class="fa fa-circle t-chat-color-green"></i>\n      </div>\n    </div>\n    <div class="panel-body">\n      <tabset justified="true">\n        <tab ng-controller="UserListController">\n          <tab-heading><i class="fa fa-user"></i>&nbsp;&nbsp;People</tab-heading>\n          <div class="search-user-container input-group">\n            <div class="input-group-addon"><i class="fa fa-search"></i></div>\n            <input type="search" class="form-control input-sm search-user" placeholder="Eg. John Doe" \n            ng-model="data.search"/>\n          </div>\n          <div class="list-people list-group">\n            <a href="" ng-click="chat(user)" ng-repeat="user in users | filter:data.search" class="list-group-item" \n            data-uid="{{ user.uid }}">\n              <i class="fa fa-circle t-chat-color-green"></i>&nbsp;&nbsp;{{ user.name }} <i class="fa fa-comment" ng-if="haveOpenThread(user)"></i>\n            </a>\n          </div>\n        </tab>\n        <tab ng-controller="GroupListController">\n          <tab-heading><i class="fa fa-group"></i>&nbsp;&nbsp;Groups</tab-heading>\n          <div class="input-group search-group-container">\n            <div class="input-group-addon"><i class="fa fa-search"></i></div>\n            <input type="search" class="form-control input-sm" placeholder="Eg. Some class" \n            ng-model="data.search"/>\n          </div>\n          <div class="list-user-groups list-group">\n            <a href="" ng-repeat="group in groups | filter:data.search" class="list-group-item" ng-click="chat(group)"\n            data-uid="{{ group.gid }}">\n              <i class="fa fa-circle t-chat-color-grey"></i>&nbsp;&nbsp;{{ group.name }} <i class="fa fa-comment" ng-if="haveOpenThread(group)"></i>\n            </a>\n          </div>\n        </tab>\n<!--    <tab ng-controller="ThreadArchiveController">\n          <tab-heading><i class="fa fa-hdd-o"></i>&nbsp;&nbsp;Archive</tab-heading>\n          <div class="list-archived-threads list-group">\n            <a href="" ng-repeat="thread in threads | filter:data.search" class="list-group-item" \n            data-uid="{{ group.gid }}">\n              <h4 class="list-group-item-heading">{{ thread.title }}</h4>\n              <p class="text-muted list-group-item-text">{{ thread.lastMessage }}</p>\n            </a>\n          </div>\n        </tab> -->\n        <!-- <tab heading="Notifications" ng-controller="NotificationsController"></tab> -->\n      </tabset>\n    </div>\n  </div>\n</div>')}]);