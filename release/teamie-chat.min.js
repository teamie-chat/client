!function(){"use strict";var e=angular.module("tChat",["ui.bootstrap","angular-link-focus","rt.eventemitter"]);e.constant("VISIBLE_THREAD_COUNT",3),e.run(["ThreadService",function(e){var t,n;t=[{uid:4,name:"Tom"},{uid:50,name:"Dick"},{uid:75,name:"Harry"}],n=[{gid:7,name:"Classroom"}],e.openThread("direct",[t[0]],!1),e.openThread("multi",[t[1],t[2]],!1),e.openThread("group",[n[0]],!1)}])}(),angular.module("tChat").directive("tChatThreads",["ThreadService","VISIBLE_THREAD_COUNT",function(e,t){"use strict";function n(n){n.threads=e.getOpenedThreads,n.visibleThreadCount=t}return{restrict:"A",replace:!0,scope:{},templateUrl:"/src/partials/t-chat-threads.html",link:n}}]),angular.module("tChat").directive("tChatThread",[function(){"use strict";return{restrict:"A",replace:!0,scope:{thread:"="},templateUrl:"/src/partials/t-chat-thread.html",controller:"ThreadController"}}]),angular.module("tChat").directive("tChatWidget",function(){"use strict";return{restrict:"A",replace:!0,scope:{title:"@"},templateUrl:"/src/partials/t-chat-widget.html"}}),angular.module("tChat").controller("ThreadController",["$scope","$log","ThreadService",function(e,t,n){"use strict";function a(t){e.ui.active=t&&t.tid===e.thread.tid}e.ui={minimized:0,highlighted:0,users:[]},e.activeThread=n.getActiveThread,e.focus=function(){e.ui.active||(t.log("activating thread "+e.thread.tid),e.ui.active=!0,n.setActiveThread(e.thread))},e.blur=function(){e.ui.active=!1},e.close=function(){t.log("close thread "+e.thread.tid),n.closeThread(e.thread.tid)},e.mute=function(){},e.addUsers=function(e){e=e||[]},e.getMessages=function(e,t){t=t||25},e.removeUser=function(){},n.on("resetActiveThread",a),e.$on("$destroy",function(){n.off("activeThread",a)})}]),angular.module("tChat").controller("UserListController",["$scope","ThreadService",function(e,t){"use strict";e.data={search:""},e.users=[{uid:1,name:"Administrator"},{uid:2,name:"Alan Turing"}],e.haveOpenThread=t.doesUserHaveThread,e.chat=function(n){var a=e.haveOpenThread(n);a?t.hoistThread(a):t.openThread("direct",[n])}}]),angular.module("tChat").controller("GroupListController",["$scope","ThreadService",function(e,t){"use strict";e.data={search:""},e.groups=[{gid:1,name:"Physics Class"},{gid:2,name:"English Class"}],e.haveOpenThread=t.doesGroupHaveThread,e.chat=function(n){var a=e.haveOpenThread(n);a?t.hoistThread(a):t.openThread("group",[n])}}]),angular.module("tChat").controller("ThreadArchiveController",["$scope",function(e){"use strict";e.threads=[{tid:1,title:"Physics Class",lastMessage:"Bye guys"},{tid:2,title:"Ravi, Barack",lastMessage:"See you. Lets catch up sometime."}]}]),angular.module("tChat").filter("reverse",function(){"use strict";return function(e){return e.slice().reverse()}}),angular.module("tChat").factory("ThreadService",["$log","$timeout","VISIBLE_THREAD_COUNT","eventEmitter",function(e,t,n,a){"use strict";function r(){return"temp."+ ++O}function i(e){var t;return _.every(U,function(n){return n.tid===e?(t=n,!1):!0}),t}function s(){return U}function o(e){E=e,A.emit("resetActiveThread",E)}function d(e){return e.name}function c(t){return 1===t.length?d(t[0]):2===t.length?_.str.sprintf("%s & %s",t[0].name,t[1].name):t.length>2?_.str.sprintf("%s, %s & %d others",t[0].name,t[1].name,t.length-1):(e.warn("multi-user thread has "+t.length+" users."),"")}function l(e){return e.name}function u(e,t){var n={tid:r(),title:h(e,t),type:e,_state:"open"};switch(e){case"direct":n.users=t,v(n.users,n.tid);break;case"group":n.group=t[0],b(n.group,n.tid);break;case"multi":n.users=t;break;default:throw new Error("thread has unknown type: "+e)}return n}function h(e,t){if(!t.length)throw new Error("need at least one entity.");switch(e){case"direct":return d(t[0]);case"group":return l(t[0]);case"multi":return c(t);default:throw new Error("thread has unknown type: "+e)}}function p(e){if(angular.isUndefined(e))throw new Error;return f(e,"group","gid")}function g(e){return f(e,"user","uid")}function f(e,t,n){if(n=n||"id",-1===["user","group"].indexOf(t))throw new Error("unknown entity: "+t);var a;switch(t){case"user":a=x;break;case"group":a=S}return a[e[n]]?a[e[n]]:!1}function v(e,t){_.each(e,function(e){g(e)||(x[e.uid]=t)})}function m(e){_.each(e,function(e){x[e.uid]&&delete x[e.uid]})}function b(e,t){p(e)||(S[e.gid]=t)}function T(e){S[e.gid]&&delete S[e.gid]}function y(e,n,a){angular.isUndefined(a)&&(a=!0);var r=u(e,n);U.push(r),a&&t(function(){o(r)})}function C(t){var n=i(t);n.users&&m(n.users),n.group&&T(n.group),U=_.filter(U,function(e){return e.tid!==t}),e.log(U.length+" threads remain")}function w(a){for(var r=!1,i=0;i<U.length;i++)if(a===U[i].tid){r=i;break}if(!_.isBoolean(r)){var s=U.length-1,d=s-n+1,c=U[r];r>=d&&s>=r?(e.log("not hoisting, activating thread "+c.tid),o(c)):(U.splice(r,1),U.push(c),t(function(){o(c)}))}}function k(){}var A,E,O=0,U=[],x={},S={};return Object.observe&&Object.observe(U,function(){e.log("there are "+U.length+" open threads")}),k.prototype.openThread=y,k.prototype.closeThread=C,k.prototype.hoistThread=w,k.prototype.setActiveThread=o,k.prototype.getOpenedThreads=s,k.prototype.doesUserHaveThread=g,k.prototype.doesGroupHaveThread=p,A=new k,a.inject(k),A}]),angular.module("tChat").run(["$templateCache",function(e){e.put("/src/partials/t-chat-thread.html",'<div class="col-xs-4 panel-thread-container" data-ng-class="{\n    \'panel-container-minimized\': ui.minimized == 1\n  }">\n  <div class="panel panel-thread panel-thread-{{ thread.type }} panel-default" data-ng-class="{\n      \'panel-success\': ui.highlighted,\n    }" data-tid="{{ thread.tid }}">\n    <div class="panel-heading">\n      <div class="panel-heading-buttons pull-right">\n        <div class="btn-group" data-dropdown>\n          <button type="button" class="btn btn-xs btn-default btn-actions dropdown-toggle" id="t-chat-thread-settings-{{ thread.tid }}" \n          data-toggle="dropdown">\n            <i class="fa fa-cog"></i>\n          </button>\n          <ul class="dropdown-menu" role="menu" aria-labelledby="t-chat-thread-settings-{{ thread.tid }}">\n            <li role="presentation">\n              <a role="menuitem" tabindex="-1" href="#">\n                <i class="fa fa-fw fa-user"></i> Add more people\n              </a>\n            </li>\n            <li role="presentation" data-ng-if="thread.type === \'multi\'">\n              <a role="menuitem" tabindex="-1" href="#">\n                <i class="fa fa-fw fa-power-off"></i> Leave\n              </a>\n            </li>\n          </ul>\n<!--           <button type="button" class="btn btn-xs btn-default btn-resize" \n            data-ng-click="ui.minimized = !ui.minimized">\n            <i class="fa" data-ng-class="{ \n              \'fa-minus\': ui.minimized == 0,\n              \'fa-plus\': ui.minimized == 1 }">\n            </i>\n          </button> -->\n          <button type="button" class="btn btn-xs btn-default btn-close" data-ng-click="close()">\n            <i class="fa fa-remove"></i>\n          </button>\n        </div>\n      </div>  \n      <div class="panel-title" data-ng-if="thread.title" ng-click="ui.minimized = !ui.minimized">\n        <i class="fa fa-circle t-chat-color-green"></i>&nbsp;&nbsp;{{ thread.title }}\n      </div>\n    </div>\n    <div class="panel-content" data-ng-show="!ui.minimized">\n      <div class="panel-body"></div>\n      <div class="panel-footer">\n        <input type="text" class="form-control" name="chat" placeholder="Send a message." link-focus="ui.active" ng-focus="focus()" ng-blur="blur()">\n      </div>\n    </div>\n  </div>\n</div>'),e.put("/src/partials/t-chat-threads.html",'<div class="col-xs-8">\n  <div class="container-threads row">\n    <div data-t-chat-thread\n         data-ng-repeat="t in threads() | reverse | limitTo:visibleThreadCount | reverse track by t.tid "\n         data-thread="t"\n         data-tid="{{ t.tid }}">\n    </div>\n  </div>\n</div>'),e.put("/src/partials/t-chat-widget.html",'<div class="col-xs-4 panel-chat-widget-container">\n  <div class="panel panel-default panel-chat-widget">\n    <div class="panel-heading">\n      <div class="panel-title">\n        Teamie Chat <i class="fa fa-circle t-chat-color-green"></i>\n      </div>\n    </div>\n    <div class="panel-body">\n      <tabset justified="true">\n        <tab ng-controller="UserListController">\n          <tab-heading><i class="fa fa-user"></i>&nbsp;&nbsp;People</tab-heading>\n          <div class="search-user-container input-group">\n            <div class="input-group-addon"><i class="fa fa-search"></i></div>\n            <input type="search" class="form-control input-sm search-user" placeholder="Eg. John Doe" \n            ng-model="data.search"/>\n          </div>\n          <div class="list-people list-group">\n            <a href="" ng-click="chat(user)" ng-repeat="user in users | filter:data.search" class="list-group-item" \n            data-uid="{{ user.uid }}">\n              <i class="fa fa-circle t-chat-color-green"></i>&nbsp;&nbsp;{{ user.name }} <i class="fa fa-comment" ng-if="haveOpenThread(user)"></i>\n            </a>\n          </div>\n        </tab>\n        <tab ng-controller="GroupListController">\n          <tab-heading><i class="fa fa-group"></i>&nbsp;&nbsp;Groups</tab-heading>\n          <div class="input-group search-group-container">\n            <div class="input-group-addon"><i class="fa fa-search"></i></div>\n            <input type="search" class="form-control input-sm" placeholder="Eg. Some class" \n            ng-model="data.search"/>\n          </div>\n          <div class="list-user-groups list-group">\n            <a href="" ng-repeat="group in groups | filter:data.search" class="list-group-item" ng-click="chat(group)"\n            data-uid="{{ group.gid }}">\n              <i class="fa fa-circle t-chat-color-grey"></i>&nbsp;&nbsp;{{ group.name }} <i class="fa fa-comment" ng-if="haveOpenThread(group)"></i>\n            </a>\n          </div>\n        </tab>\n<!--    <tab ng-controller="ThreadArchiveController">\n          <tab-heading><i class="fa fa-hdd-o"></i>&nbsp;&nbsp;Archive</tab-heading>\n          <div class="list-archived-threads list-group">\n            <a href="" ng-repeat="thread in threads | filter:data.search" class="list-group-item" \n            data-uid="{{ group.gid }}">\n              <h4 class="list-group-item-heading">{{ thread.title }}</h4>\n              <p class="text-muted list-group-item-text">{{ thread.lastMessage }}</p>\n            </a>\n          </div>\n        </tab> -->\n        <!-- <tab heading="Notifications" ng-controller="NotificationsController"></tab> -->\n      </tabset>\n    </div>\n  </div>\n</div>')}]);